# This program calls a findMax function that returns the
# maximum value in a NULL terminated list of positive numbers

         .pos 0
# set up the stack for parameter passing and jump to Main
init:    irmovl Stack, %esp
         irmovl Stack, %ebp
         jmp Main

# list of positive numbers
.align 4
list:    .long 0x00a
         .long 0x0b0
         .long 0xc00
         .long 0xd12
         .long 0xc01
         .long 0xb20
         .long 0x030
         .long 0x021
         .long 0        # end of list

# Main function:
# push the starting address of list onto the stack in
# order to pass it as a parameter to findMax and
# call findMax
Main:    irmovl list, %edx 
         pushl %edx
         call findMax
         halt

# findMax function:
# input:  parameter that is the starting address of a NULL
#         terminated list of numbers
#
# output: returns in register %eax the maximum value in the list
#
findMax:  pushl %ebp
          rrmovl %esp, %ebp
          
          # %ecx set to starting address of NULL terminated list
          mrmovl 8(%ebp), %ecx         
          irmovl 0, %eax
          irmovl 0, %esi

loop:     mrmovl (%ecx), %edx
          addl %esi, %edx
          je done
          rrmovl %eax, %edi
          subl %edx, %edi
          jge update
          mrmovl (%ecx), %eax

update:   irmovl 4, %edx
          addl %edx, %ecx
          jmp loop

done:     popl %ebp
          ret

    .pos 0x100
Stack:
